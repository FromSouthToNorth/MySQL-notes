Mysql_CH07:JDBC
	JDBC:
		作用类似于Ado.net Java中提供的一系列可以直接操作数据库的类
		
	数据库操作步骤:
		步骤1:连接上数据库  程序和数据库之间建立一个连接
			方式①odbc桥接 借助windows操作系统自带odbc数据源进行连接
			A:配置本机的odbc数据源
				控制面板--管理工具--数据源(ODBC)
				输入 添加Mysql数据源-->输入IP地址
				--->用户名--->密码--->选择要操作的数据库 建立一个数据
				MySql256
			B:写代码
				//①加载驱动类  //odbc桥接的驱动类
				String str="sun.jdbc.odbc.JdbcOdbcDriver";
				Class.forName(str);
				//②创建连接对象
				Connection conn=DriverManager
						.getConnection("地址", "用户名", "密码");
				地址: jdbc:odbc:odbc数据源名称 
				
			方式②使用纯Java驱动方式连接(常用)
			A:导入对应数据库的操作包
				新建一个lib文件夹-->复制jar包-->右键 build path--add
				
			B:写代码
				//①加载驱动类
				String str="com.mysql.jdbc.Driver";
				Class.forName(str);
				//②创建连接对象
				Connection conn=DriverManager
				.getConnection("地址","用户名","密码")
				地址: jdbc:mysql:/服务器地址:端口号/数据库名称
					  jdbc:mysql://127.0.0.1:3306/myschool
				
		步骤2: 	增删改查
			A:增删改 insert delete update 
				③写对应的sql语句 
				String sql="写对应的增删改的sql语句";
				④创建执行命令
				Statement st=conn.createStatement();
				⑤根据不同的sql调用不同的方法javascript:;
				st.executeUpdate(sql); //返回值 int类 返回受影响的行数
				⑥关闭
				st.close();
				conn.close();
			
			
			B:查询  select  
				③写对应的sql语句 
				String sql="写对应的查询的sql语句";
				④创建执行命令
				Statement st=conn.createStatement();
				⑤根据不同的sql调用不同的方法
				ResultSet set =st.executeQuery(sql); //返回值 指针
				⑥调用set的读取方法 返回每一行的数据
				set.next();
				set.getXxx(下标/列名)
					下标从1开始数数 -->转成对应的数据类型
					
				set.getObject(下标/列名)  -->Object
				
				//多行数据 可以使用循环
				while(set.next()){
		
				}
				⑦关闭
				set.close();
				st.close();
				conn.close();

MySchool:
	打印菜单:
	System.out.println("1.新增一个学生\t\t 2.新增学生的考试成绩");
	System.out.println("2.查询指定年级的所有学生\t\t 3.查询某个学生的所有考试成绩");
	System.out.println("6.查询指定课程的最高分和最低分\t\t 6.查询指定课程的平均分");
	System.out.println("7.删除指定学生的所有考试成绩\t\t 8.退出");

		